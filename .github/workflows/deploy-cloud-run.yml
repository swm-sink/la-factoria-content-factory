name: Deploy Application to Cloud Run

on:
  workflow_run:
    workflows: ["Docker Build and Push to Artifact Registry", "Terraform Apply IaC"] # Triggers after both these workflows complete on main
    types:
      - completed
    branches:
      - main

  workflow_dispatch: # Allows manual triggering

jobs:
  deploy-to-cloud-run:
    name: 'Deploy to Cloud Run'
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }} # Only run if the triggering workflows succeeded

    permissions:
      contents: 'read'
      id-token: 'write' # Required for Workload Identity Federation

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud (Workload Identity Federation)
      uses: 'google-github-actions/auth@v2'
      with:
        workload_identity_provider: 'projects/${{ secrets.GCP_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/${{ secrets.GCP_WIF_POOL_ID }}/providers/${{ secrets.GCP_WIF_PROVIDER_ID }}'
        service_account: '${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL_FOR_CI }}' # SA with Cloud Run Admin and Service Account User roles

    - name: Deploy to Cloud Run
      id: deploy
      uses: google-github-actions/deploy-cloudrun@v2
      with:
        service: ${{ secrets.GCP_CLOUD_RUN_SERVICE_ID }} # e.g., acpf-apiserver (the short ID)
        region: ${{ secrets.GCP_ARTIFACT_REGISTRY_REGION }} # Should be same region as Cloud Run service
        image: "${{ secrets.GCP_ARTIFACT_REGISTRY_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_ARTIFACT_REGISTRY_REPO_ID }}/ai-content-factory:${{ github.sha }}" # Image from CI-1.2
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        # env_vars: | # Optional: Define environment variables directly here if not managed by Terraform for the revision
        #   KEY1=value1
        #   KEY2=value2
        # revision_suffix: ${{ github.run_id }} # Optional suffix for the revision name
        # timeout: "300s" # Optional: revision timeout

    - name: 'Output Cloud Run service URL'
      run: |
        echo "Cloud Run Service URL: ${{ steps.deploy.outputs.url }}"
