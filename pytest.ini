[tool:pytest]
# La Factoria Test Configuration
# Comprehensive test setup for educational content platform
# Consolidated from multiple versions to eliminate DRY violations

# Test discovery patterns
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# CRITICAL: Add source path for imports to work correctly
pythonpath = . src

# Comprehensive options with coverage requirements
addopts =
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=src
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml
    --cov-fail-under=80
    --asyncio-mode=auto
    --import-mode=importlib

# Test markers for categorizing tests
markers =
    unit: Unit tests for individual components
    integration: Integration tests for component interactions
    api: API endpoint tests
    database: Database integration tests
    security: Security and authentication tests
    educational: Educational quality and standards tests
    ai_integration: AI provider integration tests
    real_ai: Tests that use real AI providers (consumes API credits)
    slow: Tests that take more than 5 seconds
    validation: Validation tests for project requirements
    hooks: Claude Code hooks tests
    performance: Performance and load tests
    requires_api: Tests that require external API access
    requires_db: Tests that require database connection

# Timeout for slow tests (helpful for CI/CD)
timeout = 300

# Directories to ignore during test discovery
norecursedirs =
    .git
    .tox
    dist
    build
    *.egg
    node_modules
    __pycache__
    archive
    htmlcov
    .pytest_cache

# Minimum pytest version requirement
minversion = 6.0

# Asyncio configuration
asyncio_mode = auto

# Warnings configuration
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::RuntimeWarning
    ignore::pytest.PytestUnknownMarkWarning

# Logging configuration for tests
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S